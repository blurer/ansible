---
- name: Install and Configure Pi-hole
  hosts: dns
  become: true
  vars:
    pihole_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=16') }}"
    whitelist_url: "https://raw.githubusercontent.com/blurer/Homelab-Setup/refs/heads/main/pihole/whitelist.txt"
    blocklist_url: "https://raw.githubusercontent.com/blurer/Homelab-Setup/refs/heads/main/pihole/blocks.txt"

  tasks:
    - name: Download Pi-hole install script
      get_url:
        url: https://install.pi-hole.net
        dest: /tmp/install.sh
        mode: '0755'

    - name: Ensure pihole directory exists
      file:
        path: /etc/pihole
        state: directory
        mode: '0755'

    - name: Create setupVars.conf
      copy:
        dest: /etc/pihole/setupVars.conf
        content: |
          PIHOLE_INTERFACE=eth0
          IPV4_ADDRESS=
          IPV6_ADDRESS=
          PIHOLE_DNS_1=8.8.8.8
          PIHOLE_DNS_2=8.8.4.4
          QUERY_LOGGING=true
          INSTALL_WEB_SERVER=true
          INSTALL_WEB_INTERFACE=true
          LIGHTTPD_ENABLED=true
          WEBPASSWORD={{ pihole_password }}
        mode: '0644'

    - name: Run Pi-hole installer
      command: /tmp/install.sh --unattended
      args:
        creates: /usr/local/bin/pihole

    - name: Download whitelist
      uri:
        url: "{{ whitelist_url }}"
        return_content: yes
      register: whitelist_content

    - name: Add whitelist domains
      command: pihole -w {{ item }}
      loop: "{{ whitelist_content.content.split('\n') }}"
      when: item != ''

    - name: Download blocklist
      uri:
        url: "{{ blocklist_url }}"
        return_content: yes
      register: blocklist_content

    - name: Add blocklists
      command: pihole -b {{ item }}
      loop: "{{ blocklist_content.content.split('\n') }}"
      when: item != ''

    - name: Update gravity
      command: pihole -g

    - name: Display Pi-hole password
      debug:
        msg: "Pi-hole password: {{ pihole_password }}"